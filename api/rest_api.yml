openapi: 3.0.4
info:
  title: Social network API
  version: "1.0"
paths:
  /v1/profile/{id}:
    get:
      summary: Get user profile.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
      responses:
        '200':
          description: Return profile is ok
        '400':
          description: Bad Request
        '500':
          description: Server error
        default:
          description: Unexpected error
    put:
      summary: Update user profile
      requestBody:
        description: Update user profile
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
      responses:
        '200':
          description: Profile was changed
        '400':
          description: Bad Request
        '500':
          description: Server error
        default:
          description: Unexpected error
  /v1/feed/{userId}:
    get:
      summary: Get feed for user
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type : string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Feed is OK
        '400':
          description: Bad Request
        '500':
          description: Server error
        default:
          description: Unexpected error
  /v1/posts:
    post:
     summary: Create post
     requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                photos:
                  type: array
                  items:
                    type: string
                  maxItems: 5
                place_id:
                  type: string
              required: [description, photos]
  /v1/posts/{id}:
    get:
      summary: Get post
    put:
      summary: Change post
  /v1/reactions/{postId}:
    get:
      summary: Get reactions 
    post:
      summary: Set reaction
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type : string
    delete:
      summary: Delete reaction from post
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type : string
  /v1/comments/{postId}:
    get:
      summary: Get comments for post
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type : string
    post:
      summary: Write comment
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type : string
    delete:
      summary: Delete comment from post
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type : string
  /v1/subscriptions:
    get:
      summary: Get user friends list.
  /v1/subscriptions/{userId}:
    post:
      summary: Add user to friends.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type : string
            format: uuid
    delete:
      summary: Remove user from friends.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type : string
            format: uuid
  /v1/places:
    get:
      summary: Get top places for user
      description: Returns top places for current user by search
